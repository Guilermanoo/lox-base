?start     : program

program    : declaration*

declaration: var_decl
           | stmt

var_decl   : "var" VAR ("=" expr)? ";"

?stmt      : expr ";"
           | print_cmd
           | setattr_stmt

setattr_stmt : atom "." VAR "=" expr ";"

print_cmd  : "print" expr ";"

// EXPRESSÃ•ES
?expr      : assignment

?assignment: VAR "=" assignment   -> assign
           | or_expr

?or_expr   : and_expr ("or" and_expr)*   -> or_
?and_expr  : test ("and" test)*          -> and_
?test      : "!" test        -> not_
           | "-" test        -> neg_
           | test "==" cmp   -> eq
           | cmp

?cmp       : cmp ">" factor  -> gt
           | cmp "<" factor  -> lt
           | cmp ">=" factor -> ge
           | cmp "<=" factor -> le
           | factor

?factor    : factor "+" term -> add
           | term

?term      : term "*" atom   -> mul
           | atom

?atom      : atom "." VAR      -> getattr
           | atom "(" params ")" -> call
           | NUMBER
           | BOOL
           | VAR
           | STRING
           | NIL
           | "(" cmp ")"

params     : [ expr ("," expr )* ]

BOOL.2     : "true" | "false"
VAR.1      : /[a-z_]\w*/
NUMBER     : /([1-9][0-9]*|0)(\.[0-9]+)?/ 
STRING     : /"[^"]*"/
NIL.2      : "nil"
COMMENT    : "//" /[^\n]*/

%ignore /\s/ | COMMENT